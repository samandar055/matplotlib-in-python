# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CFaEyu7m7-nGreIjAOiouC2kJCYFxxRP
"""

import matplotlib .pyplot as plt
import numpy as np
x=np.array([0,8])
y=np.array([0,350])
plt.plot(x,y)
plt.show()

import numpy as np
import matplotlib.pyplot as plt

# Vaqt oralig'ini yaratamiz
t = np.linspace(0, 2 * np.pi, 1000)

# Yurak urishi uchun sinus va eksponenta kombinatsiyasini yaratamiz
x = 16 * (np.sin(t) ** 3)
y = 13 * np.cos(t) - 5 * np.cos(2 * t) - 2 * np.cos(3 * t) - np.cos(4 * t)

# Yurak shaklini chizamiz
plt.plot(x, y, color="red", linewidth=2)
plt.title("Yurak shakli")
plt.axis("equal")  # O'qlarni teng masshtabda
plt.show()

import numpy as np
import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation

# Yurak shaklini aniqlash
def heart_shape(t):
    x = 16 * (np.sin(t) ** 3)
    y = 13 * np.cos(t) - 5 * np.cos(2 * t) - 2 * np.cos(3 * t) - np.cos(4 * t)
    return x, y

# Tarmoq uchun vaqt
t = np.linspace(0, 2 * np.pi, 1000)
x, y = heart_shape(t)

# Figurani va o'qni yaratish
fig, ax = plt.subplots()
ax.set_xlim(-20, 20)
ax.set_ylim(-20, 20)
ax.axis("equal")
ax.set_title("Yurak urishi")
line, = ax.plot([], [], color="red", linewidth=2)

# Animatsiya funksiyasi
def update(frame):
    offset = np.sin(frame / 10) * 2  # Yurak urishi effekti
    line.set_data(x, y + offset)
    return line,

# Animatsiyani sozlash
ani = FuncAnimation(fig, update, frames=range(100), interval=50, blit=True)

plt.show()

import matplotlib.pyplot as plt

# Uyning asosiy chizmasi
def draw_house():
    fig, ax = plt.subplots()

    # Uyning asosiy tanasi (to'rtburchak)
    house_body = plt.Rectangle((0, 0), 6, 4, color="lightblue")
    ax.add_patch(house_body)

    # Tom (uchburchak)
    roof = plt.Polygon([(0, 4), (6, 4), (3, 6)], color="brown")
    ax.add_patch(roof)

    # Deraza (chap tomondagi)
    left_window = plt.Rectangle((1, 2.5), 1, 1, color="white", edgecolor="black")
    ax.add_patch(left_window)

    # Deraza (o'ng tomondagi)
    right_window = plt.Rectangle((4, 2.5), 1, 1, color="white", edgecolor="black")
    ax.add_patch(right_window)

    # Eshik
    door = plt.Rectangle((2.5, 0), 1, 2, color="saddlebrown", edgecolor="black")
    ax.add_patch(door)

    # Chizmani sozlash
    ax.set_xlim(-1, 7)
    ax.set_ylim(-1, 7)
    ax.set_aspect('equal')
    ax.axis('off')  # O'qlarni o'chirish
    plt.title("Uy chizmasi")
    plt.show()

# Chizmani ishlatish
draw_house()

import matplotlib.pyplot as plt

# TATU binosining chizmasi
def draw_tatu_building():
    fig, ax = plt.subplots()

    # Bino tanasi (katta to'rtburchak)
    building_body = plt.Rectangle((0, 0), 10, 6, color="lightgray", edgecolor="black")
    ax.add_patch(building_body)

    # Kirish joyi (eshik markazda)
    main_door = plt.Rectangle((4.25, 0), 1.5, 2, color="brown", edgecolor="black")
    ax.add_patch(main_door)

    # Derazalar (uch qator derazalar)
    for i in range(3):  # Qatorlar
        for j in range(4):  # Ustunlar
            window = plt.Rectangle((1.5 + j * 2, 3.5 - i * 1.5), 1, 1, color="white", edgecolor="black")
            ax.add_patch(window)

    # Yuqori yozuv (bino nomi)
    ax.text(5, 6.2, "TATU", fontsize=16, fontweight="bold", ha="center", va="bottom", color="blue")

    # Sozlamalar
    ax.set_xlim(-1, 11)
    ax.set_ylim(-1, 8)
    ax.set_aspect('equal')
    ax.axis('off')  # O'qlarni o'chirish
    plt.title("TATU O'quv Binoning Chizmasi")
    plt.show()

# Chizma yaratish
draw_tatu_building()

import matplotlib.pyplot as plt
from matplotlib.patches import Rectangle, Circle, Polygon

# Toshkent teleminorasining oddiy ko'rinishi
def draw_tashkent_tower():
    fig, ax = plt.subplots(figsize=(6, 12))

    # Minoraning asosiy ustuni
    ax.add_patch(Rectangle((3.8, 0), 0.4, 7, color="lightgray", edgecolor="black"))

    # Dumaloq kuzatuv qismi
    ax.add_patch(Circle((4, 7.5), 1, color="blue", alpha=0.8, edgecolor="black"))

    # Kuzatuv platformasi atrofidagi halqa
    ax.add_patch(Circle((4, 7.5), 1.2, fill=False, edgecolor="black", linewidth=1.5))

    # Yuqoridagi uch qism (antenna)
    ax.add_patch(Rectangle((3.9, 8.5), 0.2, 0.5, color="black"))  # Antenna pastki qismi
    ax.add_patch(Rectangle((3.95, 9), 0.1, 0.8, color="red"))    # Antenna o'rtasi
    ax.add_patch(Rectangle((3.97, 9.8), 0.06, 0.7, color="black"))  # Antenna yuqorisi

    # Minoraning pastki qismidagi asos (trigonal o'rnatish)
    ax.add_patch(Polygon([[3.8, 0], [3.5, -1], [4.5, -1], [4.2, 0]], color="gray"))

    # Atrofdagi daraxtlar
    ax.add_patch(Circle((2.5, -0.8), 0.5, color="green"))
    ax.add_patch(Circle((5.5, -0.8), 0.5, color="green"))
    ax.add_patch(Circle((1.8, -1), 0.7, color="green"))

    # Sozlamalar
    ax.set_xlim(0, 8)
    ax.set_ylim(-2, 11)
    ax.axis("off")
    plt.title("Toshkent Teleminorasi")
    plt.show()

# Chizma yaratish
draw_tashkent_tower()

import matplotlib.pypolt as plt
import numpy as np

import matplotlib.pyplot as plt
import numpy as np

x = np.array(['510','613','614'])
y = np.array([18,20,16])
plt.bar(x,y)
plt.show()

import matplotlib.pyplot as plt
import numpy as np
mylabels=["Apples","Bananas",
          "Cherries","Dates"]

x = np.array([35,25,25,15])
plt.pie(y)
plt.show()

import matplotlib.pyplot as plt
import numpy as np
y = np.array ([10, 30, 50, 10])
mylabels = ["A", "B", "C", "D"]
plt.pie(y, labels=mylabels, autopct='%1.1f%%')
plt. title("Pie diagramma")
plt. show()

import matplotlib.pyplot as pit
import numpy as np
x = np.array([35,25,25,15])
mylabels = ["Apples", "Bananas", "Cherries",
"Dates"]
myexplode=[0, 0.2,0,0 ]
pit.pie(y, labels=mylabels,
startangle=90,explode=myexplode)
plt.showl()

import matplotlib.pyplot as plt
import numpy as np
x = np.array([35,25,25,15])
mylabels = ["Apples", "Bananas",
"Cherries",
"Dates"]
plt.pie(x, labels=mylabels)
pit.legend(title='Four Fruits:')
plt.show()